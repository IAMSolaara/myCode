;
; File generated by cc65 v 2.17 - Git 3915323
;
	.fopt		compiler,"cc65 v 2.17 - Git 3915323"
	.setcpu		"6502"
	.smart		on
	.autoimport	on
	.case		on
	.debuginfo	off
	.importzp	sp, sreg, regsave, regbank
	.importzp	tmp1, tmp2, tmp3, tmp4, ptr1, ptr2, ptr3, ptr4
	.macpack	longbranch
	.forceimport	__STARTUP__
	.import		_printf
	.export		_inizializza
	.export		_visualizza
	.export		_main

.segment	"RODATA"

L0029:
	.byte	$51,$75,$65,$73,$74,$61,$20,$65,$27,$20,$6C,$61,$20,$74,$61,$76
	.byte	$6F,$6C,$61,$20,$70,$69,$74,$61,$67,$6F,$72,$69,$63,$61,$3A,$0A
	.byte	$00
L0039:
	.byte	$09,$25,$64,$00
L0041	:=	L0029+31

; ---------------------------------------------------------------
; void __near__ inizializza (int [10] *, int)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_inizializza: near

.segment	"CODE"

	jsr     pushax
	jsr     decsp4
	ldx     #$00
	lda     #$00
	ldy     #$02
	jsr     staxysp
	jmp     L0013
L0011:	ldx     #$00
	lda     #$00
	ldy     #$00
	jsr     staxysp
	jmp     L0019
L0017:	ldy     #$07
	jsr     ldaxysp
	jsr     pushax
	ldy     #$05
	jsr     ldaxysp
	jsr     pushax
	ldx     #$00
	lda     #$14
	jsr     tosmulax
	jsr     tosaddax
	jsr     pushax
	ldy     #$03
	jsr     ldaxysp
	jsr     aslax1
	jsr     tosaddax
	jsr     pushax
	ldy     #$05
	jsr     ldaxysp
	jsr     incax1
	jsr     pushax
	ldy     #$05
	jsr     ldaxysp
	jsr     incax1
	jsr     tosmulax
	ldy     #$00
	jsr     staxspidx
	ldy     #$01
	jsr     ldaxysp
	jsr     incax1
	ldy     #$00
	jsr     staxysp
L0019:	ldy     #$01
	jsr     ldaxysp
	cmp     #$0A
	txa
	sbc     #$00
	bvc     L001B
	eor     #$80
L001B:	asl     a
	lda     #$00
	ldx     #$00
	rol     a
	jne     L0017
	ldy     #$03
	jsr     ldaxysp
	jsr     incax1
	ldy     #$02
	jsr     staxysp
L0013:	ldy     #$03
	jsr     ldaxysp
	jsr     pushax
	ldy     #$07
	jsr     ldaxysp
	jsr     tosltax
	jne     L0011
	jsr     incsp8
	rts

.endproc

; ---------------------------------------------------------------
; void __near__ visualizza (int [10] *, int)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_visualizza: near

.segment	"CODE"

	jsr     pushax
	jsr     decsp4
	lda     #<(L0029)
	ldx     #>(L0029)
	jsr     pushax
	ldy     #$02
	jsr     _printf
	ldx     #$00
	lda     #$00
	ldy     #$02
	jsr     staxysp
	jmp     L002F
L002D:	ldx     #$00
	lda     #$00
	ldy     #$00
	jsr     staxysp
	jmp     L0035
L0033:	lda     #<(L0039)
	ldx     #>(L0039)
	jsr     pushax
	ldy     #$09
	jsr     ldaxysp
	jsr     pushax
	ldy     #$07
	jsr     ldaxysp
	jsr     pushax
	ldx     #$00
	lda     #$14
	jsr     tosmulax
	jsr     tosaddax
	jsr     pushax
	ldy     #$05
	jsr     ldaxysp
	jsr     aslax1
	jsr     tosaddax
	ldy     #$01
	jsr     ldaxidx
	jsr     pushax
	ldy     #$04
	jsr     _printf
	ldy     #$01
	jsr     ldaxysp
	jsr     incax1
	ldy     #$00
	jsr     staxysp
L0035:	ldy     #$01
	jsr     ldaxysp
	cmp     #$0A
	txa
	sbc     #$00
	bvc     L0037
	eor     #$80
L0037:	asl     a
	lda     #$00
	ldx     #$00
	rol     a
	jne     L0033
	lda     #<(L0041)
	ldx     #>(L0041)
	jsr     pushax
	ldy     #$02
	jsr     _printf
	ldy     #$03
	jsr     ldaxysp
	jsr     incax1
	ldy     #$02
	jsr     staxysp
L002F:	ldy     #$03
	jsr     ldaxysp
	jsr     pushax
	ldy     #$07
	jsr     ldaxysp
	jsr     tosltax
	jne     L002D
	jsr     incsp8
	rts

.endproc

; ---------------------------------------------------------------
; int __near__ main (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_main: near

.segment	"CODE"

	ldy     #$C8
	jsr     subysp
	lda     sp
	ldx     sp+1
	jsr     pushax
	ldx     #$00
	lda     #$0A
	jsr     _inizializza
	lda     sp
	ldx     sp+1
	jsr     pushax
	ldx     #$00
	lda     #$0A
	jsr     _visualizza
	ldx     #$00
	lda     #$00
	jmp     L0003
L0003:	ldy     #$C8
	jsr     addysp
	rts

.endproc

